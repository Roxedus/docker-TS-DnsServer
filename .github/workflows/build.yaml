name: Build Image

on:
  workflow_dispatch:
  push:
    paths:
      - "Dockerfile.*"
      - "root/**"
      - ".github/workflows/build.yaml"
  schedule:
    - cron: "0 22 1,15 * 5"

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: [linux-arm64, linux-amd64]
    outputs:
      time: ${{ steps.vars.outputs.time }}

    steps:
      - uses: actions/checkout@v3
      - name: Create VARS
        id: vars
        run: |
          ARCHITECTURE=${{ matrix.architecture }}
          echo "platform=${ARCHITECTURE//-/\/}" >> $GITHUB_OUTPUT
          echo "repo=$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "file=${ARCHITECTURE#*-}" >> $GITHUB_OUTPUT
          echo "time=$(date --utc +%Y-%m-%d_%H.%M)" >> $GITHUB_OUTPUT
          echo "source=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/tree/${GITHUB_REF//refs\/heads\//}" >> $GITHUB_OUTPUT
          echo "url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/blob/master/README.md" >> $GITHUB_OUTPUT
          echo "tag=$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]'):${GITHUB_REF//refs\/heads\//}-${{ matrix.architecture }}" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:v0.10.5

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: roxedus
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: roxedus
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          platforms: ${{ steps.vars.outputs.platform }}
          file: ./Dockerfile.${{ steps.vars.outputs.file }}
          tags: |
            ${{ steps.vars.outputs.tag }}
            ghcr.io/${{ steps.vars.outputs.tag }}
          labels: |
            org.opencontainers.image.created=${{ steps.vars.outputs.time }}
            org.opencontainers.image.title=${{ steps.vars.outputs.repo }}
            org.opencontainers.image.source=${{ steps.vars.outputs.source }}
            org.opencontainers.image.url=${{ steps.vars.outputs.url }}

  publish:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: roxedus
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: roxedus
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifests for DockerHub
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE=$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')
          TAG=${GITHUB_REF//refs\/heads\//}
          SOURCE=${IMAGE}:${GITHUB_REF//refs\/heads\//}

          docker manifest create ${IMAGE}:${{ needs.build.outputs.time }}    --amend ${SOURCE}-linux-amd64 --amend ${SOURCE}-linux-arm64 && docker manifest push ${IMAGE}:${{ needs.build.outputs.time }}
          if [[ ${GITHUB_REF//refs\/heads\//} == master ]]; then
          docker manifest create ${IMAGE}:latest                             --amend ${SOURCE}-linux-amd64 --amend ${SOURCE}-linux-arm64 && docker manifest push ${IMAGE}:latest
          fi
      - name: Create manifests for GitHub Container Registry
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE=ghcr.io/$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')
          TAG=${GITHUB_REF//refs\/heads\//}
          SOURCE=${IMAGE}:${GITHUB_REF//refs\/heads\//}

          docker manifest create ${IMAGE}:${{ needs.build.outputs.time }}    --amend ${SOURCE}-linux-amd64 --amend ${SOURCE}-linux-arm64 && docker manifest push ${IMAGE}:${{ needs.build.outputs.time }}
          if [[ ${GITHUB_REF//refs\/heads\//} == master ]]; then
          docker manifest create ${IMAGE}:latest                             --amend ${SOURCE}-linux-amd64 --amend ${SOURCE}-linux-arm64 && docker manifest push ${IMAGE}:latest
          fi
